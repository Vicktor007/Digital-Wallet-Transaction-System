spring.application.name=History-Service

server.port=8081


#spring.docker.compose.lifecycle-management=start_only

spring.datasource.url=jdbc:postgresql://localhost:5432/postgres
spring.datasource.username=postgres
spring.datasource.password=postgres
spring.jpa.show-sql=true
#spring.jpa.hibernate.ddl-auto=update
spring.jpa.open-in-view=false

spring.kafka.consumer.bootstrap-servers=localhost:9092
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.group-id=wallet_events

spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
spring.kafka.consumer.properties.spring.deserializer.value.delegate.class=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=*

spring.kafka.consumer.properties.spring.json.type.mapping=WalletEvent:com.vic.historyservice.Dtos.WalletEvent




# lets me handle message commits manually
spring.kafka.consumer.enable-auto-commit=false

# Start from earliest message if no prior offset
spring.kafka.consumer.auto-offset-reset=earliest

# Commit only after successful processing
spring.kafka.listener.ack-mode=manual

logging.file.path=logs
